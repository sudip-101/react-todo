{"version":3,"sources":["components/CreateTask/CreateTask.tsx","components/Task/Task.tsx","components/Todo/Todo.tsx","containers/TodoContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CreateTask","addTask","useState","Date","startDate","setStartDate","title","setTitle","time","setTime","className","selected","onChange","date","dateFormat","minDate","onSubmit","e","preventDefault","moment","format","htmlFor","type","value","name","id","placeholder","target","required","autoComplete","Task","todoMap","task","completeTask","index","removeTask","undoTask","style","textDecoration","done","onClick","Todo","useEffect","json","localStorage","getItem","savedTasks","JSON","parse","setTodoMap","Map","Object","entries","prev","newMap","get","updateLocalStorage","set","localMap","obj","fromEntries","stringify","setItem","todoRemaining","React","useCallback","key","val","filter","i","length","newTasks","sort","a","b","localeCompare","keys","map","window","confirm","console","log","newVal","delete","TodoContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77ba2050.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./CreateTask.scss\";\r\nimport moment from \"moment\";\r\n\r\nconst CreateTask: React.FC<ICreateTaskProps> = ({ addTask }) => {\r\n  const [startDate, setStartDate] = useState<Date | null>(new Date());\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [time, setTime] = useState<string>(\"\");\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!title && !time) return;\r\n\r\n    addTask(title, time, moment(startDate).format(\"Do MMMM YYYY\"));\r\n    setTitle(\"\");\r\n    setTime(\"\");\r\n  };\r\n  return (\r\n    <div className=\"create-task\">\r\n      <div className=\"date-picker\">\r\n        <p>Add a Date -</p>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date: Date | null) => setStartDate(date)}\r\n          dateFormat={\"dd/MM/yyyy\"}\r\n          minDate={new Date()}\r\n        />\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"create-form\">\r\n        <div className=\"form-detail new-todo\">\r\n          <label htmlFor=\"todo\">Add a New To-Do :</label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"todo\"\r\n            id=\"todo\"\r\n            placeholder=\"Enter a To-Do\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            required\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n        <div className=\"form-detail todo-time\">\r\n          <label htmlFor=\"time\">Enter Deadline :</label>\r\n          <input\r\n            className=\"form-input time-input\"\r\n            type=\"time\"\r\n            value={time}\r\n            name=\"time\"\r\n            id=\"time\"\r\n            onChange={(e) => setTime(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"todo-save\">\r\n          <button className=\"submit-btn\" type=\"submit\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n","import React from \"react\";\r\nimport \"./Task.scss\";\r\n\r\nconst Task: React.FC<ITaskProps> = ({\r\n  todoMap,\r\n  task,\r\n  index,\r\n  completeTask,\r\n  removeTask,\r\n  undoTask,\r\n}) => {\r\n  return (\r\n    <div className=\"task\">\r\n      <div className=\"task-top\">\r\n        <h3\r\n          className=\"task-title\"\r\n          style={{ textDecoration: task.done ? \"line-through\" : \"\" }}\r\n        >\r\n          {task.title}\r\n        </h3>\r\n        <p>Deadline - {task.time}</p>\r\n      </div>\r\n      <div className=\"task-btn-container\">\r\n        {task.done ? (\r\n          <button className=\"btn-task\" onClick={undoTask}>\r\n            Undo\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn-task\" onClick={completeTask}>\r\n            Complete\r\n          </button>\r\n        )}\r\n        <button className=\"btn-task\" onClick={removeTask}>\r\n          Remove\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CreateTask from \"../CreateTask/CreateTask\";\r\nimport Task from \"../Task/Task\";\r\n\r\nconst Todo: React.FC = () => {\r\n  useEffect(() => {\r\n    const json: string = localStorage.getItem(\"todoList\") || \"{}\";\r\n    const savedTasks = JSON.parse(json);\r\n    if (savedTasks) {\r\n      setTodoMap(new Map(Object.entries(savedTasks)));\r\n    }\r\n  }, []);\r\n  const [todoMap, setTodoMap] = useState<Map<string, ITaskArr[]>>(new Map([]));\r\n\r\n  const addTask = (title: string, time: string, date: string) => {\r\n    setTodoMap((prev) => {\r\n      const newMap = new Map(prev);\r\n      const val = newMap.get(date);\r\n      if (val) {\r\n        const newTasks = [...val, { title, done: false, time }].sort((a, b) =>\r\n          a.time.localeCompare(b.time)\r\n        );\r\n        updateLocalStorage(newMap.set(date, newTasks));\r\n        return newMap.set(date, newTasks);\r\n      }\r\n      updateLocalStorage(newMap.set(date, [{ title, done: false, time }]));\r\n      return newMap.set(date, [{ title, done: false, time }]);\r\n    });\r\n  };\r\n\r\n  const completeTask = (index: number, date: string, done: boolean) => {\r\n    setTodoMap((prev) => {\r\n      const newMap = new Map(prev);\r\n      const value = newMap.get(date);\r\n      if (value) {\r\n        value[index].done = done;\r\n        updateLocalStorage(newMap.set(date, [...value]));\r\n        return newMap.set(date, [...value]);\r\n      }\r\n      return newMap;\r\n    });\r\n  };\r\n\r\n  const removeTask = (index: number, date: string) => {\r\n    if (window.confirm(\"Do you want to remove the task?\"))\r\n      setTodoMap((prev) => {\r\n        const newMap = new Map(prev);\r\n        console.log(newMap);\r\n        const value = newMap.get(date);\r\n        console.log(value);\r\n        if (value) {\r\n          const newVal = value.filter((obj, i) => i !== index);\r\n          console.log(newVal);\r\n          if (newVal.length === 0) {\r\n            newMap.delete(date);\r\n            console.log(newMap);\r\n            updateLocalStorage(newMap);\r\n            return newMap;\r\n          }\r\n          updateLocalStorage(newMap.set(date, [...newVal]));\r\n          return newMap.set(date, [...newVal]);\r\n        }\r\n        return newMap;\r\n      });\r\n  };\r\n\r\n  const updateLocalStorage = (localMap: Map<string, ITaskArr[]>) => {\r\n    const obj = Object.fromEntries(localMap);\r\n    const json = JSON.stringify(obj);\r\n    localStorage.setItem(\"todoList\", json);\r\n  };\r\n\r\n  const todoRemaining = React.useCallback(\r\n    (key: string) => {\r\n      const val = todoMap.get(key);\r\n      if (val) return val.filter((i) => !i.done).length;\r\n      return 0;\r\n    },\r\n    [todoMap]\r\n  );\r\n\r\n  return (\r\n    <div className=\"todos-box\">\r\n      <div className=\"header\">\r\n        <h1 className=\"logo\">To-Do Taker</h1>\r\n      </div>\r\n      <div className=\"create-task-container\">\r\n        <CreateTask addTask={addTask} />\r\n      </div>\r\n      <div className=\"todo-card-container\">\r\n        {[...todoMap.keys()].map((key) => (\r\n          <div className=\"card\">\r\n            <h2>{key}</h2>\r\n            <p className=\"pending-task\">Pending Tasks - {todoRemaining(key)}</p>\r\n            <div className=\"task-container\">\r\n              {todoMap.get(key)?.map((task, index) => (\r\n                <Task\r\n                  todoMap={todoMap}\r\n                  task={task}\r\n                  key={index}\r\n                  index={index}\r\n                  completeTask={() => completeTask(index, key, true)}\r\n                  removeTask={() => removeTask(index, key)}\r\n                  undoTask={() => completeTask(index, key, false)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"../components/Todo/Todo\";\r\n\r\nconst TodoContainer: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Todo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoContainer;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport TodoContainer from \"./containers/TodoContainer\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <TodoContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}